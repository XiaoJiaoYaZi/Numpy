import numpy as np
b = np.arange(24).reshape(2,3,4)
print(b.shape)
print(b)
#选取第一维的数据
print('数组切片')
print('b第一维数据：')
print(b[0,...])
print(b[0,:,:])
print('b第一维数据切片选择')
print(b[0,:,::2])
print(b[::-1])
#矩阵展平
print('矩阵展平')
c = b.ravel()#不会改变数组本身,返回数组的视图
print(c)
c = b.flatten()#不会改变数组本身,需要申请内存空间
print(c)
print(b)

c = b.transpose()
print(c)
b.resize((2,12))#resize会修改数组本身
print(b)

print('数组组合')
a = np.arange(9)
a = a.reshape(3,3)
print(a)
b = a*2#乘法
print(b)
print('水平组合')
c = np.hstack((a,b))
print(c)
c = np.concatenate((a,b),axis=1)
print(c)
c = np.column_stack((a,b))
print(c)
print('垂直组合')
d = np.vstack((a,b))
print(d)
d = np.concatenate((a,b),axis=0)
print(d)
d1= np.row_stack((a,b))
print(d1)
print(d==d1)
print('深度组合')
e = np.dstack((a,b))
print(e)

print('colum_stack与row_stack对一维数组的不同')
a = np.arange(2)
b = np.arange(2)*2
print(a,b)
c = np.row_stack((a,b))
print(c)
d = np.column_stack((a,b))
print(d)
print('数组分割')
a = np.arange(9).reshape(3,3)
print(a)
print('水平分割hsplit')
b = np.hsplit(a,3)
print(b)
print('水平分割split')
c = np.split(a,3,axis=1)
print(c)
print('垂直分割vsplit')
b = np.vsplit(a,3)
print(b)
print('垂直分割split')
c = np.split(a,3,axis=0)
print(c)
print('深度分割dsplit')
a = np.arange(27).reshape(3,3,3)
print(a)
d = np.dsplit(a,3)
print(d)